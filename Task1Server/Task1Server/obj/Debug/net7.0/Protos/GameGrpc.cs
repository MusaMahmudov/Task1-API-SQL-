// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/game.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Task1Server {
  public static partial class Game
  {
    static readonly string __ServiceName = "game.Game";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.MatchRequest> __Marshaller_game_MatchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.MatchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.MatchResponse> __Marshaller_game_MatchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.MatchResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.ConnectToGameRequest> __Marshaller_game_ConnectToGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.ConnectToGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.ConnectToGameResponse> __Marshaller_game_ConnectToGameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.ConnectToGameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.MoveRequest> __Marshaller_game_MoveRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.MoveRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.Response> __Marshaller_game_Response = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.Response.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.GameRequest> __Marshaller_game_GameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.GameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Task1Server.GameResult> __Marshaller_game_GameResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Task1Server.GameResult.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Task1Server.MatchRequest, global::Task1Server.MatchResponse> __Method_GetGamesToPlay = new grpc::Method<global::Task1Server.MatchRequest, global::Task1Server.MatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGamesToPlay",
        __Marshaller_game_MatchRequest,
        __Marshaller_game_MatchResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Task1Server.ConnectToGameRequest, global::Task1Server.ConnectToGameResponse> __Method_ConnectToGame = new grpc::Method<global::Task1Server.ConnectToGameRequest, global::Task1Server.ConnectToGameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConnectToGame",
        __Marshaller_game_ConnectToGameRequest,
        __Marshaller_game_ConnectToGameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Task1Server.MoveRequest, global::Task1Server.Response> __Method_MakeMove = new grpc::Method<global::Task1Server.MoveRequest, global::Task1Server.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MakeMove",
        __Marshaller_game_MoveRequest,
        __Marshaller_game_Response);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Task1Server.GameRequest, global::Task1Server.GameResult> __Method_DetermineResult = new grpc::Method<global::Task1Server.GameRequest, global::Task1Server.GameResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DetermineResult",
        __Marshaller_game_GameRequest,
        __Marshaller_game_GameResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Task1Server.GameReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Game</summary>
    [grpc::BindServiceMethod(typeof(Game), "BindService")]
    public abstract partial class GameBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Task1Server.MatchResponse> GetGamesToPlay(global::Task1Server.MatchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Task1Server.ConnectToGameResponse> ConnectToGame(global::Task1Server.ConnectToGameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Task1Server.Response> MakeMove(global::Task1Server.MoveRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Task1Server.GameResult> DetermineResult(global::Task1Server.GameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GameBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGamesToPlay, serviceImpl.GetGamesToPlay)
          .AddMethod(__Method_ConnectToGame, serviceImpl.ConnectToGame)
          .AddMethod(__Method_MakeMove, serviceImpl.MakeMove)
          .AddMethod(__Method_DetermineResult, serviceImpl.DetermineResult).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GameBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetGamesToPlay, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Task1Server.MatchRequest, global::Task1Server.MatchResponse>(serviceImpl.GetGamesToPlay));
      serviceBinder.AddMethod(__Method_ConnectToGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Task1Server.ConnectToGameRequest, global::Task1Server.ConnectToGameResponse>(serviceImpl.ConnectToGame));
      serviceBinder.AddMethod(__Method_MakeMove, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Task1Server.MoveRequest, global::Task1Server.Response>(serviceImpl.MakeMove));
      serviceBinder.AddMethod(__Method_DetermineResult, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Task1Server.GameRequest, global::Task1Server.GameResult>(serviceImpl.DetermineResult));
    }

  }
}
#endregion
